apiVersion: v1
kind: Namespace
metadata:
  name: microservices

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql-deployment
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:latest
          imagePullPolicy: Never
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: auth_svc,inv_svc,order_svc
          ports:
            - containerPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: microservices
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: auth:latest
          imagePullPolicy: Never  
          ports:
            - containerPort: 8010

---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: microservices
spec:
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 8010
      targetPort: 8010

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-deployment
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
    spec:
      containers:
        - name: order
          image: order:latest
          imagePullPolicy: Never  
          ports:
            - containerPort: 8030

---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: microservices
spec:
  selector:
    app: order
  ports:
    - protocol: TCP
      port: 8030
      targetPort: 8030

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-deployment
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory
  template:
    metadata:
      labels:
        app: inventory
    spec:
      containers:
        - name: inventory
          image: inventory:latest
          imagePullPolicy: Never  
          ports:
            - containerPort: 8020

---
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: microservices
spec:
  selector:
    app: inventory
  ports:
    - protocol: TCP
      port: 8020
      targetPort: 8020

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: api-gateway:latest
          imagePullPolicy: Never  
          ports:
            - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: microservices
spec:
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: NodePort
